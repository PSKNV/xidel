<?xml version="1.0" encoding="UTF-8"?>
<CONFIG>
  <ProjectOptions>
    <Version Value="9"/>
    <General>
      <Flags>
        <MainUnitHasCreateFormStatements Value="False"/>
        <MainUnitHasTitleStatement Value="False"/>
      </Flags>
      <SessionStorage Value="InProjectDir"/>
      <MainUnit Value="0"/>
      <Title Value="xidel"/>
      <UseXPManifest Value="True"/>
    </General>
    <VersionInfo>
      <Language Value=""/>
      <CharSet Value=""/>
      <StringTable ProductVersion=""/>
    </VersionInfo>
    <BuildModes Count="2">
      <Item1 Name="default" Default="True"/>
      <Item2 Name="win32">
        <CompilerOptions>
          <Version Value="11"/>
          <Target>
            <Filename Value="xidel"/>
          </Target>
          <SearchPaths>
            <IncludeFiles Value="$(ProjOutDir)"/>
            <OtherUnitFiles Value="/home/benito/hg/components/pascal/import/synapse/;/home/benito/hg/components/pascal/import/regexpr/Source/;/home/benito/hg/components/pascal/internet/;/home/benito/hg/components/pascal/import/regexpr/source/"/>
            <UnitOutputDirectory Value="lib/$(TargetCPU)-$(TargetOS)"/>
          </SearchPaths>
          <Parsing>
            <SyntaxOptions>
              <UseAnsiStrings Value="False"/>
            </SyntaxOptions>
          </Parsing>
          <CodeGeneration>
            <SmartLinkUnit Value="True"/>
            <Checks>
              <RangeChecks Value="True"/>
              <OverflowChecks Value="True"/>
              <StackChecks Value="True"/>
            </Checks>
            <TargetCPU Value="i386"/>
            <TargetOS Value="win32"/>
          </CodeGeneration>
          <Linking>
            <LinkSmart Value="True"/>
          </Linking>
        </CompilerOptions>
      </Item2>
    </BuildModes>
    <PublishOptions>
      <Version Value="2"/>
      <IgnoreBinaries Value="False"/>
      <IncludeFileFilter Value="*.(pas|pp|inc|lfm|lpr|lrs|lpi|lpk|sh|xml)"/>
      <ExcludeFileFilter Value="*.(bak|ppu|ppw|o|so);*~;backup"/>
    </PublishOptions>
    <RunParams>
      <local>
        <FormatVersion Value="1"/>
        <CommandLineParams Value="--xquery 'declare function foo() { &lt;output:serialization-parameters xmlns:output=&quot;http://www.w3.org/2010/xslt-xquery-serialization&quot;/> }; foo()' --xml"/>
        <LaunchingApplication PathPlusParams="/usr/X11R6/bin/xterm -T 'Lazarus Run Output' -e $(LazarusDir)/tools/runwait.sh $(TargetCmdLine)"/>
        <WorkingDirectory Value="/home/benito/hg/programs/internet/VideLibri/_meta/sites"/>
      </local>
    </RunParams>
    <RequiredPackages Count="3">
      <Item1>
        <PackageName Value="utf8tools"/>
      </Item1>
      <Item2>
        <PackageName Value="LCLBase"/>
      </Item2>
      <Item3>
        <PackageName Value="internettools"/>
      </Item3>
    </RequiredPackages>
    <Units Count="3">
      <Unit0>
        <Filename Value="xidel.pas"/>
        <IsPartOfProject Value="True"/>
        <UnitName Value="xidel"/>
      </Unit0>
      <Unit1>
        <Filename Value="xidelbase.pas"/>
        <IsPartOfProject Value="True"/>
        <UnitName Value="xidelbase"/>
      </Unit1>
      <Unit2>
        <Filename Value="../../../components/pascal/data/xquery_module_file.pas"/>
        <IsPartOfProject Value="True"/>
        <UnitName Value="xquery_module_file"/>
      </Unit2>
    </Units>
  </ProjectOptions>
  <CompilerOptions>
    <Version Value="11"/>
    <Target>
      <Filename Value="xidel"/>
    </Target>
    <SearchPaths>
      <IncludeFiles Value="$(ProjOutDir)"/>
      <OtherUnitFiles Value="../../../components/pascal/import/synapse;../../../components/pascal/internet;../../../components/pascal/data;../../../components/pascal/system;../../../components/pascal/import/regexpr/source;../../../components/pascal/import/utf8tools"/>
      <UnitOutputDirectory Value="lib/$(TargetCPU)-$(TargetOS)"/>
    </SearchPaths>
    <CodeGeneration>
      <SmartLinkUnit Value="True"/>
      <Checks>
        <RangeChecks Value="True"/>
        <OverflowChecks Value="True"/>
        <StackChecks Value="True"/>
      </Checks>
    </CodeGeneration>
    <Linking>
      <LinkSmart Value="True"/>
    </Linking>
  </CompilerOptions>
  <Debugging>
    <Exceptions Count="3">
      <Item1>
        <Name Value="EAbort"/>
      </Item1>
      <Item2>
        <Name Value="ECodetoolError"/>
      </Item2>
      <Item3>
        <Name Value="EFOpenError"/>
      </Item3>
    </Exceptions>
  </Debugging>
</CONFIG>
